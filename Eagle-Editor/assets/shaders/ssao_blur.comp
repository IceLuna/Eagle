layout(push_constant) uniform PushConstants
{
    ivec2 g_Size;
    vec2 g_TexelSize;
};

layout(binding = 0) uniform sampler2D g_SSAO;
layout(binding = 1, r8) uniform writeonly image2D g_Result;

#define GROUP_SIZE 8
layout(local_size_x = GROUP_SIZE, local_size_y = GROUP_SIZE) in;

void main()
{
    const ivec2 pixelCoords = ivec2(gl_GlobalInvocationID);
    if (pixelCoords.x >= g_Size.x || pixelCoords.y >= g_Size.y)
        return;

    const vec2 uv = (pixelCoords + 0.5f) * g_TexelSize;

    float result = 0.f;
    for (int x = -2; x < 2; ++x)
       for (int y = -2; y < 2; ++y)
       {
           vec2 offset = vec2(x, y) * g_TexelSize;
           result += texture(g_SSAO, uv + offset).x;
       }
    
    const float invNumSamples = 1.f / 16.f;
    result = result * invNumSamples;

    imageStore(g_Result, pixelCoords, vec4(result, 0.f, 0.f, 1.f));
}
